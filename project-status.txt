### MediaGrabber Project TODO

**Phase 1: Core Functionality & Stability**

*   [ ] **Setup & Diagnosis:**
    *   [ ] Install necessary dependencies, including `fluent-ffmpeg`.
    *   [ ] Run `npm run build` and `npm run check` to diagnose and fix any existing build, type-checking, and test failures.
*   [ ] **Backend - Video Processing:**
    *   [ ] Create a new `url-validator.ts` in the `shared` directory to validate URLs from YouTube, Twitter, Instagram, and Pinterest.
    *   [ ] Implement a `/api/fetch-info` endpoint in `server/routes.ts` that accepts a URL and uses `yt-dlp-exec` to return video metadata (title, thumbnail, available formats).
    *   [ ] Implement a `/api/download` endpoint. This endpoint will take a URL and a format ID.
    *   [ ] In the `/api/download` endpoint, add logic to use `ffmpeg` to merge separate video and audio streams when a high-quality format is requested.
*   [ ] **Frontend - UI/UX:**
    *   [ ] Update `client/src/components/download-interface.tsx` to call the `/api/fetch-info` endpoint and display the video preview.
    *   [ ] Create a `client/src/components/download-options.tsx` component to display MP3/MP4 and resolution choices based on the fetched data.
    *   [ ] Implement the ad display logic: when a user selects a format, show a `google-ad.tsx` component with a 15 or 30-second timer before initiating the download from the `/api/download` endpoint.

**Phase 2: Charity & Monetization**

*   [ ] **Database & Stats:**
    *   [ ] Define a database schema in `shared/schema.ts` to track total donations and ad-revenue share for charity.
    *   [ ] Create a `/api/stats` endpoint to retrieve the charity donation totals.
    *   [ ] Create a `/api/record-ad-view` endpoint that the frontend can call after a 30-second ad is viewed to update the database.
*   [ ] **Frontend - Charity:**
    *   [ ] Update the `client/src/components/charity-impact.tsx` component to display the numbers from the `/api/stats` endpoint.
    *   [ ] Integrate Stripe into the `client/src/pages/donate.tsx` page for direct donations.

**Phase 3: Finalization**

*   [ ] **Content:**
    *   [ ] Add "Coming Soon" placeholders for other social media downloaders.
*   [ ] **Documentation:**
    *   [ ] Create a final `README.md` section with clear instructions on how to set up and run the project locally.